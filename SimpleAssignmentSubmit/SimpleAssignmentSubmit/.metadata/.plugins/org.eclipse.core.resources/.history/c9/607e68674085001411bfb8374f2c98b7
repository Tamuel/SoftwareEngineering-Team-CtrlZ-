package GUIPanel;

import java.awt.Color;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;

import javax.swing.BorderFactory;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;

import Account.Account;
import Assignment.Assignment;
import GUIFrame.BulletinBoardFrame;
import GuiComponent.SimpleButton;
import GuiComponent.SimpleLabel;
import GuiComponent.SimpleTextArea;

public class AssignmentPanel extends JPanel{
	
	private Assignment assignment;
	
	private BulletinBoardFrame boardFrame;
	private StudentAssignmentPanel myAssignmentPanel;
	private ContentPanel contentPanel;
	
	private SimpleTextArea topic;
	private SimpleTextArea content;
	private SimpleTextArea deadline;
	private SimpleButton makeAssignment;
	
	private JScrollPane scrollBar;

	private int topicHeight = 40;
	private int xBorder = 10;
	private int yBorder = 10;

	private Color backgroundColor = new Color(255, 255, 255);

	public AssignmentPanel(Account account, Assignment assignment, BulletinBoardFrame boardFrame, ContentPanel contentPanel, TitleBar titleBar) {
		this.assignment = assignment;
		this.boardFrame = boardFrame;
		this.contentPanel = contentPanel;
		this.setLayout(null);

		this.setSize(boardFrame.getContentWidth() - xBorder * 2, (boardFrame.getHeight() - yBorder * 3 - titleBar.getHeight()) / 2);
		
		topic = new SimpleTextArea(assignment.getTopic());
		topic.setSize(this.getWidth() * 3 / 5 - 2, topicHeight - 1);
		topic.setLocation(1, 1);
	
		SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy.MM.dd HH:mm:ss");
		deadline = new SimpleTextArea(dateFormat.format(assignment.getDeadline()) + " 까지");
		deadline.setSize(this.getWidth() * 2 / 5, topicHeight - 1);
		deadline.setLocation(topic.getWidth() + 1, 1);
		deadline.setBackground(new Color(240, 240, 240));
		deadline.setSmallFont();

		makeAssignment = new SimpleButton("과제 작성");
		makeAssignment.setSize(90, 30);
		makeAssignment.setLocation(this.getWidth() - makeAssignment.getWidth() - 5, this.getHeight() - makeAssignment.getHeight() - 5);
		makeAssignment.addActionListener(new SubmitButtonListener());
		
		content = new SimpleTextArea(assignment.getContent());
		content.setSize(this.getWidth() - 2, this.getHeight() - topicHeight - makeAssignment.getHeight() - 25);
		content.setLocation(1, topicHeight);
//		content.setBorder(BorderFactory.createMatteBorder(1, 0, 1, 0, new Color(180, 180, 180)));
		content.setMargin(new Insets(10, 10, 10, 10));

		scrollBar = new JScrollPane(content);
		scrollBar.setLocation(1, topicHeight);
		scrollBar.setBorder(BorderFactory.createMatteBorder(1, 0, 1, 0, new Color(180, 180, 180)));
		scrollBar.setSize(this.getWidth() - 2, this.getHeight() - topicHeight - makeAssignment.getHeight() - 10);
		scrollBar.setWheelScrollingEnabled(true);
		
		if(assignment.isSubmitted(((Student)account)))
		
		this.add(topic);
		this.add(scrollBar);
		this.add(deadline);
		
		this.add(makeAssignment);
		
		this.setBorder(BorderFactory.createMatteBorder(1, 1, 1, 1, new Color(180, 180, 180)));
		this.setBackground(backgroundColor);
	}

	private class SubmitButtonListener implements ActionListener {
		public void actionPerformed(ActionEvent ev) {
			removeMyAssignmentPanel();
			contentPanel.addStudentAssignmentPanel();
			boardFrame.repaint();
		}
	}
	
	public void removeMyAssignmentPanel() {
		if(myAssignmentPanel != null)
			boardFrame.remove(myAssignmentPanel);
	}

	public int thisHeight() {
		return this.getHeight();
	}

	public int thisX() {
		return this.getX();
	}
	
	public int thisBottom() {
		return this.getY() + this.getHeight() + yBorder;
	}
}
