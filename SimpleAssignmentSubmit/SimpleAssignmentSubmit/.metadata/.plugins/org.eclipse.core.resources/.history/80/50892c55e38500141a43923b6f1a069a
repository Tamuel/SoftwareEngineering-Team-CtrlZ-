package GUIFrame;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.BorderFactory;
import javax.swing.JFrame;

import Account.Account;
import Account.Professor;
import Assignment.Subject;
import GuiComponent.SimpleButton;
import GuiComponent.SimpleJFrame;
import GuiComponent.SimpleTextField;

public class MakeAccountFrame extends SimpleJFrame{
	
	private Account accounts;
	
	private SimpleTextField idField;
	private SimpleTextField passwordField;
	private SimpleTextField nameField;
	private SimpleTextField subjectField;
	private SimpleButton submitButton;
	private SimpleButton cancleButton;
	
	private int componentHeight = 40;
	private int adjust = -20;
	private int xBorder = 20;
	private int yBorder = 10;
	
	public MakeAccountFrame(Account accounts, String frameName, int width, int height) {
		super(frameName, width, height);

		this.accounts = accounts;
		
		idField = new SimpleTextField("ID");
		idField.setSize(WIDTH - xBorder * 2, componentHeight);
		idField.setBackground(new Color(240, 240, 240));
		idField.setLocation(xBorder, componentHeight + adjust);
		
		passwordField = new SimpleTextField("Password");
		passwordField.setSize(WIDTH - xBorder * 2, componentHeight);
		passwordField.setBackground(new Color(240, 240, 240));
		passwordField.setLocation(xBorder, componentHeight * 2 + yBorder + adjust);
		
		nameField = new SimpleTextField("이름");
		nameField.setSize(WIDTH - xBorder * 2, componentHeight);
		nameField.setBackground(new Color(240, 240, 240));
		nameField.setLocation(xBorder, componentHeight * 3 + yBorder * 2 + adjust);

		subjectField = new SimpleTextField("담당 과목");
		subjectField.setSize(WIDTH - xBorder * 2, componentHeight);
		subjectField.setBackground(new Color(240, 240, 240));
		subjectField.setLocation(xBorder, componentHeight * 4 + yBorder * 3 + adjust);
		
		submitButton = new SimpleButton("등록");
		submitButton.setSize((WIDTH - xBorder *3) / 2, componentHeight);
		submitButton.setLocation(xBorder, componentHeight * 5 + yBorder * 4 + adjust);
		submitButton.addActionListener(new submitListener());
		
		cancleButton = new SimpleButton("취소");
		cancleButton.setSize((WIDTH - xBorder *3) / 2, componentHeight);
		cancleButton.setLocation(xBorder * 2 + submitButton.getWidth(), submitButton.getY());
		cancleButton.addActionListener(new cancleListener());
		
		this.add(idField);
		this.add(passwordField);
		this.add(nameField);
		this.add(subjectField);
		this.add(submitButton);
		this.add(cancleButton);
		
		this.getContentPane().setBackground(new Color(255, 255, 255));
		this.getRootPane().setBorder(BorderFactory.createLineBorder(new Color(220, 220, 220), 1));
	}
	
	private class submitListener implements ActionListener {
		public void actionPerformed(ActionEvent ev) {
			if(accounts.checkIdRepeated(idField.getText().toString()) && !subjectField.getText().equals("담당 과목")) {
				Professor temp = new Professor(idField.getText().toString(), passwordField.getText().toString(), nameField.getText().toString(), subject);
				temp.setName(nameField.getText().toString());
				Subject newSubject = new Subject(subjectField.getText().toString());
				temp.setPermission(1);
				((Professor)temp).setSubject(newSubject);
				System.out.println("교수 아이디 생성 " + temp.getId() + temp.getName() + temp.isProfessor() + ((Professor)temp).getSubject().getName());
				accounts.addAccount(temp);
			} else if(accounts.checkIdRepeated(idField.getText().toString()) && subjectField.getText().equals("담당 과목")) {
				temp = accounts.searchAccount(idField.getText().toString(), passwordField.getText().toString());
				temp.setName(nameField.getText().toString());
				temp.setPermission(0);
				System.out.println("학생 아이디 생성 " + temp.getId() + temp.getName() + temp.isStudent());
			} else if(!accounts.checkIdRepeated(idField.getText().toString())) {
				System.out.println("이미 아이디가 존재합니다");
			}
		}
	}
	
	private class cancleListener implements ActionListener {
		public void actionPerformed(ActionEvent ev) {
			LoginFrame login = new LoginFrame("Login", 300, 200);
			visible(false);
		}
	}
	
	public void visible (boolean bool) {
		this.setVisible(bool);
	}
}
