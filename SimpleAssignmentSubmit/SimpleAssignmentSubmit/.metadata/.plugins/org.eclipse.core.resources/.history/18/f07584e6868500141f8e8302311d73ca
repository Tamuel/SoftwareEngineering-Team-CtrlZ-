package GUIPanel;

import java.awt.Color;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;

import javax.swing.BorderFactory;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;

import Account.Account;
import Account.Professor;
import Account.Student;
import Assignment.Assignment;
import Assignment.Subject;
import GUIFrame.BulletinBoardFrame;
import GuiComponent.SimpleButton;
import GuiComponent.SimpleLabel;
import GuiComponent.SimpleTextArea;

public class NewAssignmentPanel extends JPanel{
	
	private Subject subject;
	
	private BulletinBoardFrame boardFrame;
	
	private SimpleTextArea topic;
	private SimpleTextArea content;
	private SimpleTextArea deadlineYear;
	private SimpleTextArea deadlineMonth;
	private SimpleTextArea deadlineDay;
	private SimpleTextArea deadlineHour;
	private SimpleButton makeAssignment;
	
	private JScrollPane scrollBar;

	private int topicHeight = 40;
	private int xBorder = 10;
	private int yBorder = 10;

	private Color backgroundColor = new Color(255, 255, 255);

	public NewAssignmentPanel(Subject subject, BulletinBoardFrame boardFrame, TitleBar titleBar) {
		this.subject = subject;
		this.boardFrame = boardFrame;
		this.setLayout(null);

		this.setSize(boardFrame.getContentWidth() - xBorder * 2, (boardFrame.getHeight() - yBorder * 3 - titleBar.getHeight()) / 2);
		
		topic = new SimpleTextArea("苞力");
		topic.setSize(this.getWidth() * 3 / 5 - 2, topicHeight - 1);
		topic.setLocation(1, 1);
		topic.setEditable(true);
	
		deadlineYear = new SimpleTextArea("斥");
		deadlineYear.setSize((this.getWidth() * 2 / 5) / 4, topicHeight - 1);
		deadlineYear.setLocation(topic.getWidth() + 1, 1);
		deadlineYear.setBackground(new Color(240, 240, 240));
		deadlineYear.setSmallFont();
		deadlineYear.setEditable(true);
		
		deadlineMonth = new SimpleTextArea("岿");
		deadlineMonth.setSize((this.getWidth() * 2 / 5) / 4, topicHeight - 1);
		deadlineMonth.setLocation(deadlineYear.getWidth() + deadlineYear.getX() + 1, 1);
		deadlineMonth.setBackground(new Color(240, 240, 240));
		deadlineMonth.setSmallFont();
		deadlineMonth.setEditable(true);
		
		deadlineDay = new SimpleTextArea("老");
		deadlineDay.setSize((this.getWidth() * 2 / 5) / 4, topicHeight - 1);
		deadlineDay.setLocation(deadlineMonth.getWidth() + deadlineMonth.getX() + 1, 1);
		deadlineDay.setBackground(new Color(240, 240, 240));
		deadlineDay.setSmallFont();
		deadlineDay.setEditable(true);
		
		deadlineHour = new SimpleTextArea("矫");
		deadlineHour.setSize((this.getWidth() * 2 / 5) / 4, topicHeight - 1);
		deadlineHour.setLocation(deadlineDay.getWidth() + deadlineDay.getX() + 1, 1);
		deadlineHour.setBackground(new Color(240, 240, 240));
		deadlineHour.setSmallFont();
		deadlineHour.setEditable(true);

		makeAssignment = new SimpleButton("苞力 积己");
		makeAssignment.setSize(90, 30);
		makeAssignment.setLocation(this.getWidth() - makeAssignment.getWidth() - 5, this.getHeight() - makeAssignment.getHeight() - 5);
		makeAssignment.addActionListener(new SubmitButtonListener());
		
		content = new SimpleTextArea("");
		content.setSize(this.getWidth() - 2, this.getHeight() - topicHeight - makeAssignment.getHeight() - 25);
		content.setLocation(1, topicHeight);
		content.setMargin(new Insets(10, 10, 10, 10));
		content.setEditable(true);

		scrollBar = new JScrollPane(content);
		scrollBar.setLocation(1, topicHeight);
		scrollBar.setBorder(BorderFactory.createMatteBorder(1, 0, 1, 0, new Color(180, 180, 180)));
		scrollBar.setSize(this.getWidth() - 2, this.getHeight() - topicHeight - makeAssignment.getHeight() - 10);
		scrollBar.setWheelScrollingEnabled(true);
		
		this.add(topic);
		this.add(scrollBar);
		this.add(deadlineYear);
		this.add(deadlineMonth);
		this.add(deadlineDay);
		this.add(deadlineHour);
		
		this.add(makeAssignment);
		
		this.setBorder(BorderFactory.createMatteBorder(1, 1, 1, 1, new Color(180, 180, 180)));
		this.setBackground(backgroundColor);
	}

	private class SubmitButtonListener implements ActionListener {
		public void actionPerformed(ActionEvent ev) {
			((Professor)boardFrame.getAccount()).makeAssignment(topic.getText(), content.getText(),
					deadlineYear.getText(), deadlineMonth.getText(), deadlineDay.getText(), deadlineHour.getText());
			boardFrame.repaint();
		}
	}
	
	public int thisHeight() {
		return this.getHeight();
	}

	public int thisX() {
		return this.getX();
	}
	
	public int thisBottom() {
		return this.getY() + this.getHeight() + yBorder;
	}
}
