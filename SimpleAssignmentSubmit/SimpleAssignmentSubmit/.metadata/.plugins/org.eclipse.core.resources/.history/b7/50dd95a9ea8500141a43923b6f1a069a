package GUIFrame;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.Iterator;

import javax.swing.BorderFactory;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JScrollPane;

import Account.Account;
import Account.Professor;
import Account.Student;
import Assignment.Subject;
import GuiComponent.SimpleButton;
import GuiComponent.SimpleJFrame;
import GuiComponent.SimpleTextField;

public class SubjectSelectFrame extends SimpleJFrame{
	
	private Student student;
	
	private LoginFrame loginFrame;
	
	private ArrayList<SimpleButton> subjectButtons;
	private JScrollPane scrollBar;
	
	private int componentHeight = 40;
	private int xBorder = 20;
	private int yBorder = 10;
	private int height;
	
	public SubjectSelectFrame(ArrayList<Account> accounts, Student student, String frameName, int width, int height, LoginFrame loginFrame) {
		super(frameName, width, height);

		this.student = student;
		this.loginFrame = loginFrame;

		subjectButtons = new ArrayList<SimpleButton>();
		
		height = 0;
		JPanel panel = new JPanel();
		panel.setSize(this.getWidth(), height);
		panel.setBackground(Color.WHITE);
		
		int i = 0;
		Iterator iter = accounts.iterator();
		while(iter.hasNext()) {
			Account temp = (Account)iter.next();
			if(temp.isProfessor()) {
				SubjectButton tempButton = new SubjectButton(((Professor)temp).getSubject().getName(), ((Professor)temp).getSubject());
				tempButton.setSize(WIDTH - xBorder * 2, componentHeight);
				tempButton.setLocation(xBorder, componentHeight * i + yBorder * (i + 1));
				tempButton.addActionListener(new selectListener());
				subjectButtons.add(tempButton);
				panel.add(tempButton);
				
				i++;
			}
		}
		
		scrollBar = new JScrollPane();
		
		this.getContentPane().setBackground(new Color(255, 255, 255));
		this.getRootPane().setBorder(BorderFactory.createLineBorder(new Color(220, 220, 220), 1));
	}
	
	private class SubjectButton extends SimpleButton {
		private Subject subject;
		
		public SubjectButton(String text, Subject subject) {
			super(text);
			this.subject = subject;
		}
		
		public Subject getSubject() {
			return subject;
		}
	}
	
	private class selectListener implements ActionListener {
		public void actionPerformed(ActionEvent ev) {
			SubjectButton thisButton = (SubjectButton)ev.getSource();
			LoginFrame login = new LoginFrame("Login", 300, 200);
			visible(false);
		}
	}
	
	public void visible (boolean bool) {
		this.setVisible(bool);
	}
}
